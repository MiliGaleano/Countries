{"version":3,"sources":["components/countryCard.js","components/header.js","services/getCountries.js","components/modalCountry.js","components/filters.js","components/home.js","App.js","index.js"],"names":["CountryCard","country","handleModal","mode1","numericCode","flag","name","population","region","capital","className","src","alt","onClick","Intl","NumberFormat","format","Header","handleMode","darkMode","sunIcon","icon","lightIcon","moonIcon","faLightbulb","getCountries","fetch","then","res","json","response","ModalCountry","idCountry","countries","handleOpModal","mode2","filter","x","nativeName","currencies","languages","borders","alpha3Code","subregion","topLevelDomain","map","currency","code","lan","iso639_1","length","border","nameBorder","Filters","handleSelect","select","handleChange","searchIcon","faSearch","type","onChange","value","Home","useState","setCountries","modalCountry","setModalCountry","setIdCountry","setSelect","searched","setSearched","setDarkMode","useEffect","listOfCountries","handleOpenModal","toUpperCase","search","e","target","console","log","style","justifyContent","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.702c022a.chunk.js","sourcesContent":["import React from 'react'\r\nimport './styles.css'\r\n\r\nconst CountryCard = ({country, handleModal, mode1}) => {\r\n    const {numericCode, flag, name, population, region, capital} = country\r\n\r\n    const handleClick = () => {\r\n        handleModal(name)\r\n    }\r\n\r\n    return(\r\n        <div key={numericCode} className={`divCountryCard ${mode1}`}>\r\n            <img src={flag} alt={`${name} flag`} className='flagImgCard' onClick={handleClick}/>\r\n            <div className='infoCountryCard'>\r\n                <h1 className='NameCard'>{name}</h1>\r\n                <h2 className='InfoCard'><span className='SpanInfoCard'>Population:</span> {(new Intl.NumberFormat(\"de-DE\").format(population))}</h2>\r\n                <h2 className='InfoCard'><span className='SpanInfoCard'>Region:</span> {region}</h2>\r\n                <h2 className='InfoCard'><span className='SpanInfoCard'>Capital:</span> {capital}</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryCard","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faLightbulb } from '@fortawesome/free-solid-svg-icons'\r\nimport { faLightbulb as lightIcon} from '@fortawesome/free-regular-svg-icons'\r\nimport './styles.css'\r\n\r\nconst Header = ({handleMode, darkMode, mode1}) => {\r\n\r\n    const sunIcon = <FontAwesomeIcon icon={lightIcon} />\r\n    const moonIcon = <FontAwesomeIcon icon={faLightbulb} />\r\n\r\n    return(\r\n        <div className={`header ${mode1}`}>\r\n            <h1 className='logo'>Where in the world?</h1>\r\n            {(darkMode) \r\n            ? <div onClick={handleMode} className='buttonMode'>{sunIcon}<h1 className='textMode'>Light mode</h1></div> \r\n            : <div onClick={handleMode} className='buttonMode'>{moonIcon}<h1 className='textMode'>Dark mode</h1></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","const apiURL= 'https://restcountries.eu/rest/v2/all'\r\n\r\nconst getCountries = () => {\r\n    return fetch(apiURL)\r\n    .then(res => res.json())\r\n    .then(response => {\r\n        return response\r\n    })\r\n}\r\n\r\nexport default getCountries","import React from 'react'\r\n\r\nconst ModalCountry = ({handleModal, idCountry, countries, handleOpModal, mode2, mode1}) => {\r\n    const countryModal= countries.filter((x) => x.name === idCountry)\r\n    const {name, nativeName, capital, currencies, languages, flag, alpha3Code, borders, subregion, topLevelDomain, region, population} = countryModal[0]\r\n   \r\n    const handleClickBorder = (x) => {\r\n        handleOpModal(x)\r\n    }\r\n   \r\n    return(\r\n        <div className={`divModal ${mode2}`}>\r\n            <button onClick={handleModal} className={`${mode1} closeModal`}>close</button>\r\n            <div className='flex'>\r\n                <img src={flag} alt={`${name} flag`} className='imgModal'/>\r\n                <section className='sectionInfoModal'>\r\n                    <h1 className='NameCard'>{idCountry}</h1>\r\n                    <div className='divInfoModal'>\r\n                        <h2 className='InfoCard'><span className='SpanInfoCard'>Native name:</span> {nativeName}</h2>\r\n                        <h2 className='InfoCard'><span className='SpanInfoCard'>Region:</span> {region}</h2>\r\n                        <h2 className='InfoCard'><span className='SpanInfoCard'>Subregion:</span> {subregion}</h2>\r\n                        <h2 className='InfoCard'><span className='SpanInfoCard'>Population:</span> {(new Intl.NumberFormat(\"de-DE\").format(population))}</h2>\r\n                        <h2 className='InfoCard'><span className='SpanInfoCard'>Capital:</span> {capital}</h2>\r\n                    </div>\r\n                    <div className='divInfoModal'>\r\n                        <h2 className='InfoCard'><span className='SpanInfoCard'>Top Level Domain:</span> {topLevelDomain[0]}</h2>\r\n                        <h2 className='InfoCard'><span className='SpanInfoCard'>Currencies:</span> \r\n                            {currencies.map(currency => \r\n                                <h3 className='InfoCard' key={currency.code}>{currency.name}</h3>\r\n                            )}\r\n                        </h2>\r\n                        <h2 className='InfoCard'><span className='SpanInfoCard'>Languages:</span> \r\n                            {languages.map(lan => \r\n                                <h3 className='InfoCard' key={lan.iso639_1}>{lan.name}</h3>\r\n                            )}\r\n                        </h2>\r\n                    </div>\r\n                    {borders.length !== 0 &&\r\n                    <div>\r\n                        <span className='SpanInfoCard titleBorder'>Borders:</span>\r\n                        <div className='borders'> \r\n                            {borders.map(border => {\r\n                                const borderCountry = countries.filter((x) => x.alpha3Code === border)\r\n                                const nameBorder = borderCountry[0].name\r\n                                return <h3 className={`InfoCard buttonBorder ${mode1}`} key={border} onClick={()=>handleClickBorder(nameBorder)}>{nameBorder}</h3>\r\n                                }\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalCountry\r\n\r\n\r\n// return <a href={`https://es.wikipedia.org/wiki/${borderCountry[0].name}`} target=\"_blank\" rel='noreferrer'><h3 key={border}>{borderCountry[0].name}</h3></a>","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Filters = ({ handleSelect, select, handleChange, mode1}) => {\r\n\r\n    const searchIcon = <FontAwesomeIcon icon={faSearch} />\r\n\r\n    return(\r\n        <div className='header topMargin'>\r\n            <div className={`divSearch ${mode1}`}>\r\n                <input type='text' onChange={handleChange} className='inputSearch'/>\r\n                {searchIcon}\r\n            </div>\r\n            <div className='divSelect'>\r\n                    <select value={select} onChange={handleSelect} className='select'>\r\n                        <option className='option' value=\"All\">All</option>\r\n                        <option className='option' value=\"Africa\">Africa</option>\r\n                        <option className='option' value=\"Americas\">Americas</option>\r\n                        <option className='option' value=\"Asia\">Asia</option>\r\n                        <option className='option' value=\"Europe\">Europe</option>\r\n                        <option className='option' value=\"Oceania\">Oceania</option>\r\n                        <option className='option' value=\"Polar\">Polar</option>\r\n                        <option className='option' value=\"\">Other</option>\r\n                    </select>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filters","import React, {useEffect, useState} from 'react'\r\nimport CountryCard from './countryCard'\r\nimport Header from './header'\r\nimport getCountries from '../services/getCountries'\r\nimport ModalCountry from './modalCountry'\r\nimport './styles.css'\r\nimport Filters from './filters'\r\n\r\nconst Home = () => {\r\n\r\n    const [countries, setCountries] = useState([])\r\n    const [modalCountry, setModalCountry] = useState(false)\r\n    const [idCountry, setIdCountry] = useState('')\r\n    const [select, setSelect] = useState('All')\r\n    const [searched, setSearched] = useState('')\r\n    const [darkMode, setDarkMode] = useState(false)\r\n\r\n    useEffect(() =>{\r\n        getCountries()\r\n        .then(response => setCountries(response))\r\n    }, [])\r\n\r\n    const handleOpenModal = (x) => {\r\n        setModalCountry(true)\r\n        setIdCountry(x)\r\n    }\r\n    const handleCloseModal = () => {\r\n        setModalCountry(false)\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setSearched(e.target.value)\r\n    }\r\n\r\n    const handleSelect = (e) => {\r\n        setSelect(e.target.value)\r\n        console.log(select)\r\n    }\r\n\r\n    const handleMode = () => {\r\n        setDarkMode(!darkMode)\r\n    }\r\n\r\n    let listOfCountries\r\n    if (select === 'All') {\r\n        listOfCountries = countries\r\n    } else {\r\n        listOfCountries = countries.filter((x) => x.region === select)\r\n    }\r\n\r\n    if (searched !== '') {\r\n        listOfCountries = listOfCountries.filter((x) => x.name.toUpperCase().search(searched.toUpperCase()) !== -1 )\r\n    }\r\n\r\n    const mode1 = (darkMode) ? 'darkMode1' : 'clearMode1'\r\n    const mode2 = (darkMode) ? 'darkMode2' : 'clearMode2'\r\n\r\n    return(\r\n        <div className={`${mode2} divHome`}>\r\n            {(modalCountry) && <ModalCountry countries={countries} handleModal={handleCloseModal} handleOpModal={handleOpenModal} idCountry={idCountry} mode2={mode2} mode1={mode1}/>}\r\n            <Header handleMode={handleMode} darkMode={darkMode} mode1={mode1}></Header>\r\n            <Filters handleSelect={handleSelect} select={select} handleChange={handleChange} mode1={mode1}/>\r\n            <div className='divCards' style={(listOfCountries.length < 3) ? {justifyContent: 'space-around'} : null}>\r\n            {\r\n                listOfCountries.map((country) => \r\n                <CountryCard country={country} handleModal={handleOpenModal} mode1={mode1}></CountryCard>\r\n                )\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import './App.css';\nimport Home from './components/home'\n\nconst App = () => {\n  return (\n    <div>\n      <Home></Home>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}